package com.zeroone_creative.basicapplication.controller.util;import android.graphics.Bitmap;import android.os.AsyncTask;import android.util.Log;import com.zeroone_creative.basicapplication.controller.provider.NetworkTaskCallback;import com.zeroone_creative.basicapplication.controller.provider.NetworkTasks;import org.apache.http.HttpResponse;import org.apache.http.HttpStatus;import org.apache.http.client.HttpClient;import org.apache.http.client.methods.HttpPost;import org.apache.http.entity.mime.HttpMultipartMode;import org.apache.http.entity.mime.MultipartEntity;import org.apache.http.entity.mime.content.ByteArrayBody;import org.apache.http.impl.client.DefaultHttpClient;import java.io.ByteArrayOutputStream;import java.io.IOException;public class PostPictureRequestUtil extends AsyncTask<String, Integer, Object>{    private NetworkTaskCallback callback;    private String authorization;    private Bitmap image;    private NetworkTasks task;            public PostPictureRequestUtil(final NetworkTasks task, final NetworkTaskCallback callback, String authorization) {    	this.task = task;    	this.callback = callback;        this.authorization = authorization;    }        public void setData(Bitmap image){    	this.image = image;    }    	@Override    protected Object doInBackground(String... params){    	String postUrl = params[0];    	HttpClient httpClient = new DefaultHttpClient();    	HttpPost post = new HttpPost(postUrl);    	MultipartEntity entity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);    	try{    		ByteArrayBody bab = ImageUtil.toByteArrayBody(image);    		entity.addPart("image",bab);    		//entity.addPart("latitude",new StringBody(latitude,Charset.forName("UTF-8")));    		post.setEntity(entity);    		post.addHeader("Authorization",authorization);    		HttpResponse response = httpClient.execute(post);    		int status = response.getStatusLine().getStatusCode();    		Log.d(this.getClass().getSimpleName(),"Status:"+Integer.toString(status));    		if (status == HttpStatus.SC_OK){    			ByteArrayOutputStream oStream = new ByteArrayOutputStream();    			response.getEntity().writeTo(oStream);    			Log.d(this.getClass().getSimpleName(),oStream.toString());    			return oStream.toString();    		}else{    			return null;    		}    	} catch(IOException e) {    		e.printStackTrace();	  		Log.v("ERR","msg:" + e.getMessage());    	} catch(Exception e) {    		e.printStackTrace();    	}    	return null;    }    @Override    protected void onPostExecute(Object object) {    	if (object!=null){    		callback.onSuccessNetworkTask(task.id, object);        }else{            callback.onFailedNetworkTask(task.id,null);        }    }      }